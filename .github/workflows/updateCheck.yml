name: Check for update Experimental

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'The game branch (EarlyAccess/Experimental)'
        required: true
        type: string


jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Cleanup
        run: Remove-Item * -Recurse -Force -Confirm:$false -ErrorAction Ignore

      - name: Set appName to CrabEA
        if: github.event.inputs.branch == 'EarlyAccess'
        run: echo "appName=CrabEA" >> $GITHUB_ENV
      
      - name: Set appName to CrabTest
        if: github.event.inputs.branch == 'Experimental'
        run: echo "appName=CrabTest" >> $GITHUB_ENV
      
      - name: Invalid branch
        if: github.event.inputs.branch != 'Experimental' && github.event.inputs.branch != 'EarlyAccess'
        run: echo "Invalid branch ${{ github.event.inputs.branch }}"
      
      - name: Download legendary
        run: gh release download --repo derrod/legendary -p "legendary.exe"
      
      - name: Download Satisfactory version file
        run: .\legendary.exe download ${{ env.appName }} --base-path . --prefix="Engine/Binaries/Win64/FactoryGame-Win64-Shipping.version" --game-folder="Satisfactory" -y

      - name: Read Satisfactory version
        id: gameVersion
        uses: notiz-dev/github-action-json-property@release
        with: 
            path: 'Satisfactory/Engine/Binaries/Win64/FactoryGame-Win64-Shipping.version'
            prop_path: 'Changelist'
      
      - name: Set gameVersion variable
        run: echo "gameVersion=${{steps.gameVersion.outputs.prop}}" >> $GITHUB_ENV

      - uses: actions/checkout@v2
        with:
          ref: 'refs/heads/${{ github.event.inputs.branch }}'
          path: 'satisfactory-modding'
          repository: 'mircearoata/satisfactory-modding'

      - name: Read current repo version
        id: currentVersion
        uses: juliangruber/read-file-action@v1
        with:
          path: 'satisfactory-modding/Headers/currentVersion.txt'
      
      
      - name: Set gameVersion variable
        run: echo "currentVersion=${{steps.currentVersion.outputs.content}}" >> $GITHUB_ENV
      
      - name: Invoke workflow without inputs
        if: env.gameVersion > env.currentVersion
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: updateHeaders
          token: ${{ secrets.PERSONAL_TOKEN }}
          inputs: '{ "branch": "${{ github.event.inputs.branch }}" }'
